# Borrar todos los contenedores
docker rm -f $(docker ps -a -q)

# Login into Docker Machine
ssh docker@(tuIP) [password:tcuser]

########## DOCKER COMPOSE #########
docker rm -f $(docker ps -a -q)
docker-compose up --build


############ ANGULAR ##############
# Compilar la aplicacion Angular con: ng build --prod --aot=false
# El resultado estara en la carpeta /angular/dist y lo deberemos copiar a /docker/angular/app
# Ojo, no se puede usar el modificador '--aot' porque hay algunas librerias que no son compatibles

docker rm -f $(docker ps -a -q)
docker build -t apache2 .
docker run -dit -p 4200:80 --rm --name angular apache2


############## API ################
# Al mover el JAR a la carpeta /docker/api recordar que el JAR no debe generar la base de datos
# La base de datos ya estara previamente cargada en otro contenedor a traves de un archivo SQL

docker rm -f $(docker ps -a -q)
docker build -t api .
docker run -it --rm --name api_spring api


############## MYSQL ################
# Cosas de Alma:
# Instalar: docker pull mysql

docker run --name daw_mysql -e MYSQL_ROOT_PASSWORD=pass -e MYSQL_DATABASE=daw -p 3306:3306 -d mysql

docker ps

docker logs daw_mysql

# Ejecutar Dockerfile

docker rm -f $(docker ps -a -q)
docker build -t mysql .
docker run -it --name mysql_server mysql
